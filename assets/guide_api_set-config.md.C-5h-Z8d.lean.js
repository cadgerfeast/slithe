import{_ as i,c as a,a2 as n,o as e}from"./chunks/framework._E5sAfiq.js";const d=JSON.parse('{"title":"Set Config","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api/set-config.md","filePath":"[slug].md"}'),t={name:"guide/api/set-config.md"};function l(p,s,h,o,k,c){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="set-config" tabindex="-1">Set Config <a class="header-anchor" href="#set-config" aria-label="Permalink to &quot;Set Config&quot;">â€‹</a></h1><p>This method allows to change <code>Slithe</code> configuration dynamically.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { setConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;slithe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	closeIcon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Icon name to use as a close icon (in tabs or modals for example)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	checkIcon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;check&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Icon name to use as a close icon (in tabs or modals for example)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	alertIcon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alert-fill&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Icon name to use as a alert icon (in validation for example)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	successIcon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;check-circle-fill&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Icon name to use as a close icon (in validation for example)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,3)]))}const E=i(t,[["render",l]]);export{d as __pageData,E as default};
